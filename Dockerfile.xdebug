FROM k0d3r1s/php-fpm:unstable as builder

USER    root

ENV     PHP_CFLAGS "-fstack-protector-strong -fpic -fpie -O2 -ftree-vectorize -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -march=native"
ENV     PHP_CPPFLAGS "$PHP_CFLAGS"
ENV     PHP_LDFLAGS "-Wl,-O2 -pie"

RUN     \
        set -eux \
&&      apk add --update --no-cache --no-progress --upgrade -X http://dl-cdn.alpinelinux.org/alpine/edge/testing autoconf g++ linux-headers php82-dev \
&&      mkdir --parents /home/vairogs/extensions \
&&      cd /home/vairogs/extensions \
&&      wget -O /usr/local/bin/docker-php-ext-enable https://raw.githubusercontent.com/docker-library/php/master/8.2/alpine3.17/fpm/docker-php-ext-enable \
&&      chmod -R 777 /usr/local/bin \
&&      git clone --single-branch https://github.com/xdebug/xdebug.git \
&&      ( \
            cd xdebug \
            &&  phpize \
            &&  autoupdate \
            &&  ./configure --enable-xdebug \
            &&  make -j "$(expr $(nproc) / 3)" \
            &&  make install \
            &&  cd .. || exit \
        ) \
&&      docker-php-ext-enable xdebug \
&&      git clone --single-branch https://github.com/simpletoimplement/runkit7-runkit7.git \
&&      ( \
            cd  runkit7-runkit7 \
            &&  phpize \
            &&  ./configure \
            &&  make -j "$(expr $(nproc) / 3)" \
            &&  make install \
            &&  cd .. || exit \
        ) \
&&      docker-php-ext-enable runkit7 \
&&      apk del --purge --no-cache autoconf g++ linux-headers php82-dev \
&&      echo xdebug.mode=debug,coverage >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
&&      echo xdebug.discover_client_host=0 >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
&&      echo xdebug.client_host=host.docker.internal >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
&&      echo xdebug.log=/tmp/xdebug.log >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
&&      echo runkit.internal_override=1 >> /usr/local/etc/php/conf.d/docker-php-ext-runkit7.ini \
&&      echo 'alias upd="composer update -nW --ignore-platform-reqs"' >> /home/vairogs/.bashrc \
&&      echo 'alias ins="composer install -n --ignore-platform-reqs"' >> /home/vairogs/.bashrc \
&&      echo 'alias req="composer require -nW --ignore-platform-reqs"' >> /home/vairogs/.bashrc \
&&      echo 'alias rem="composer remove -nW --ignore-platform-reqs"' >> /home/vairogs/.bashrc \
&&      rm -rf \
            /tmp/* \
            /var/cache/* \
            ~/.pearrc \
            /tmp/* \
            /home/vairogs/extensions \
            /usr/local/php/man/* \
            /usr/local/bin/docker-php-ext-enable \
            /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini

COPY    10-opcache.jit.ini /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini

FROM    scratch

COPY    --from=builder / / 

ENV     PHP_INI_DIR /usr/local/etc/php
ENV     PHP_VERSION 8.3.0-dev
ENV     container=docker
ENV     PATH="${PATH}:/home/vairogs/.composer/vendor/bin"
ENV     PHP_CS_FIXER_IGNORE_ENV=1
LABEL   maintainer="support+docker@vairogs.com"

SHELL   ["/bin/bash", "-o", "pipefail", "-c"]

USER    vairogs

RUN     \
        set -eux \
&&      composer global config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true \
# &&      composer global config --no-plugins allow-plugins.infection/extension-installer true \
# &&      composer global require phpstan/phpstan:1.9.x-dev nunomaduro/phpinsights:dev-master infection/infection:dev-master -n --ignore-platform-reqs
&&      composer global require phpstan/phpstan:1.9.x-dev -n --ignore-platform-reqs \
&&      git config --global --add safe.directory "*"

STOPSIGNAL SIGQUIT

EXPOSE  9000

WORKDIR /var/www/html

CMD     ["sh", "-c", "php-fpm && /bin/bash"]
